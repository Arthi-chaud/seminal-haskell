-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Enhance Type Error Messages
@package seminal-haskell
@version 0.0.1

module Changes

-- | Enum of the possible Changes to apply on the AST | Inspired by the
--   list provided in the Seminal paper (2006, p. 4)
data Change

-- | Replace a variable with <a>undefined</a>
GenericReplacement :: Change

-- | Add arbitrary new argument to function call
AddArg :: Change

-- | Delete argument to function call
DelArg :: Change

-- | Swap arguments to function call
SwapArg :: Change

-- | Turns an array into a tuple
ArrayToTuple :: Change

-- | Turns a tuple into an array
TupleToArray :: Change

-- | Turns application arguments into a tuple | Either all of them, or some
ArgsToTuple :: Change

-- | Remove `case of` match
RemoveCaseMatch :: Change

-- | Set value of `case of` match to undefined
SetCaseToUndef :: Change

-- | Set match of `case of` match to undefined
SetMatchToUndef :: Change

-- | Remove type signature
RemoveTypeSignature :: Change

-- | Replace <tt>x</tt> in `if x then ... else ...` by <a>True</a>
IfToTrue :: Change

-- | Set value of `let x = ` to <a>undefined</a>
LetToUndef :: Change

-- | Set one value in `where` clause to <a>undefined</a>
WhereToUndef :: Change

-- | Turn `[x]` into <tt>x</tt>
SingletonToItem :: Change

-- | Turn <tt>x</tt> into `[x]`
ItemToSingleton :: Change

module Compiler.Module

-- | Apply (possibly modified) HsModule to ParsedModule, | To allow sending
--   it to the typechecker
applyAST :: HsModule -> ParsedModule -> ParsedModule

module Compiler.Runner

-- | Allows runnning function exposed by the compiler's API
runCompiler :: Ghc a -> IO a


-- | Provides utilities to parse a file/source code using the compiler's
--   API
module Compiler.Parser

-- | Parse a file, retrieve its module
parseFile :: FilePath -> IO ParsingResult

-- | Result of Parsing process
type ParsingResult = Either ParsingErrorType ParsedModule
data ParsingErrorType

-- | Permission to read the file denied
PermissionDenied :: ParsingErrorType

-- | The file was not found
FileNotFound :: ParsingErrorType

-- | There was an error syntax in the source code
SyntaxError :: ParsingErrorType

-- | An unknown error occured | Comes with an error messag
UnknownError :: String -> ParsingErrorType
instance GHC.Classes.Eq Compiler.Parser.ParsingErrorType
instance GHC.Show.Show Compiler.Parser.ParsingErrorType


-- | Provide a way to access Compiler/Typechecker as a black box, |
--   according to Seminal's algorithm
module Compiler.TypeChecker

-- | Defines the possible outcomes of the typechecking process of the
--   compiler
data TypeCheckStatus

-- | Indicated the Code typechecks
Success :: TypeCheckStatus

-- | An error happened while typechecking
Error :: ErrorType -> TypeCheckStatus
data ErrorType

-- | Indicates an error occured while typechecking
TypeCheckError :: ErrorType

-- | A type or variable could not be resolved | It comes with the
--   compiler's error message
ScopeError :: String -> ErrorType

-- | Typecheck Module
typecheckModule :: ParsedModule -> Ghc TypeCheckStatus
instance GHC.Classes.Eq Compiler.TypeChecker.TypeCheckStatus
instance GHC.Show.Show Compiler.TypeChecker.TypeCheckStatus
instance GHC.Classes.Eq Compiler.TypeChecker.ErrorType
instance GHC.Show.Show Compiler.TypeChecker.ErrorType


-- | From a node in the AST, provide possible changes to apply
module Enumerator


-- | The Ranker allows sorting valid changes, before presenting them to the
--   user
module Ranker


-- | Goes through the AST to find nodes to give to the enumerator
module Searcher


-- | Entrypoint to Seminal
module Seminal

-- | Run Seminal on a source file. If it returns Nothing, the file
--   typechecks, otherwise, provides an ordered list of change suggestions
runSeminal :: FilePath -> IO Status
data Status

-- | When the file typechecks without any changes
Success :: Status

-- | When an error occurs while parsing the file, unrelated to typechecking
InvalidFile :: String -> Status

-- | An ordered list of change suggestions
Changes :: [Change] -> Status
