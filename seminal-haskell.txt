-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Enhance Type Error Messages
@package seminal-haskell
@version 0.0.1

module Seminal.Change

-- | Defines a change to apply on the AST. The namings are inspired by the
--   <tt>astRepl</tt> (Seminal, 2006, p. 5)
data Change node

-- | Exported constructor for <a>Change</a>. It will allow easier build of
--   related doc
newChange :: Outputable node => node -> node -> SrcSpan -> [Change node] -> Maybe String -> ChangeType -> Change node

-- | Rewraps tha location to the change type
wrapLoc :: (SrcSpan -> a -> l) -> Change a -> Change l

-- | Gives information about a change
data ChangeDoc
ChangeDoc :: SrcSpan -> SDoc -> SDoc -> Maybe String -> ChangeType -> ChangeDoc

-- | Location (in the source code) of the changed node.
[location] :: ChangeDoc -> SrcSpan

-- | The PrettyPrint of the changed subnode
[pprSrc] :: ChangeDoc -> SDoc

-- | The PrettyPrint of the new subnode
[pprExec] :: ChangeDoc -> SDoc

-- | An optional message to give to the user
[message] :: ChangeDoc -> Maybe String

-- | A 'type' of Change, which allows ranking them
[category] :: ChangeDoc -> ChangeType

-- | Reset the originally changed node.
rewriteSrc :: Outputable node => node -> Change leaf -> Change leaf
data ChangeType

-- | The Change basically replaces the node with a wildcard. It is not a
--   conclusive change
Wildcard :: ChangeType

-- | A Change that consist in removing a value
Removal :: ChangeType

-- | A Change that consist of wrapping the actual value E.g. <a>show</a>
Wrapping :: ChangeType

-- | The Change is good enough to terminate the search and/or be presented
--   to the user as if
Terminal :: ChangeType
instance GHC.Show.Show Seminal.Change.ChangeType
instance GHC.Classes.Eq Seminal.Change.ChangeType
instance GHC.Show.Show (Seminal.Change.Change node)
instance GHC.Base.Functor Seminal.Change.Change
instance GHC.Show.Show Seminal.Change.ChangeDoc
instance GHC.Classes.Ord Seminal.Change.ChangeType

module Seminal.Compiler.Runner

-- | Allows runnning function exposed by the compiler's API
runCompiler :: Ghc a -> IO a


-- | Provides utilities to parse a file/source code using the compiler's
--   API
module Seminal.Compiler.Parser

-- | Parse a file, retrieve its module
parseFile :: FilePath -> IO ParsingResult

-- | Result of Parsing process
type ParsingResult = Either ParsingErrorType ParsedModule
data ParsingErrorType

-- | Permission to read the file denied
PermissionDenied :: ParsingErrorType

-- | The file was not found
FileNotFound :: ParsingErrorType

-- | There was an error syntax in the source code
SyntaxError :: ParsingErrorType

-- | An unknown error occured | Comes with an error messag
UnknownError :: String -> ParsingErrorType
instance GHC.Classes.Eq Seminal.Compiler.Parser.ParsingErrorType
instance GHC.Show.Show Seminal.Compiler.Parser.ParsingErrorType


-- | Provide a way to access Compiler/Typechecker as a black box, |
--   according to Seminal's algorithm
module Seminal.Compiler.TypeChecker

-- | Defines the possible outcomes of the typechecking process of the
--   compiler
data TypeCheckStatus

-- | Indicated the Code typechecks
Success :: TypeCheckStatus

-- | An error happened while typechecking
Error :: ErrorType -> TypeCheckStatus
data ErrorType

-- | Indicates an error occured while typechecking
TypeCheckError :: String -> ErrorType

-- | A type or variable could not be resolved | It comes with the
--   compiler's error message
ScopeError :: String -> ErrorType

-- | Typecheck Module
typecheckModule :: ParsedModule -> Ghc TypeCheckStatus
instance GHC.Classes.Eq Seminal.Compiler.TypeChecker.TypeCheckStatus
instance GHC.Show.Show Seminal.Compiler.TypeChecker.TypeCheckStatus
instance GHC.Classes.Eq Seminal.Compiler.TypeChecker.ErrorType
instance GHC.Show.Show Seminal.Compiler.TypeChecker.ErrorType

module Seminal.Options
newtype Options
Options :: SearchMethod -> Options

-- | Tells when to stop searching
[search] :: Options -> SearchMethod
data SearchMethod

-- | Stop when the bottom of the AST is reached
Eager :: SearchMethod

-- | Stop when a <tt>Terminal</tt> change is found
Lazy :: SearchMethod
instance GHC.Classes.Eq Seminal.Options.SearchMethod


-- | Entrypoint to Seminal
module Seminal

-- | Run Seminal on a source file. If it returns Nothing, the file
--   typechecks, otherwise, provides an ordered list of change suggestions
runSeminal :: Options -> FilePath -> IO Status
data Status

-- | When the file typechecks without any changes
Success :: Status

-- | When an error occurs while parsing the file, unrelated to typechecking
InvalidFile :: String -> Status

-- | An ordered list of change suggestions, Along with the original
--   typecheck error
Changes :: (String, [Change HsModule]) -> Status
instance GHC.Show.Show Seminal.Status
